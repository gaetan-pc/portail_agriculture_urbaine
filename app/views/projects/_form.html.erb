<% content_for :javascript_head do %> 
  <script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
  <script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=places" type="text/javascript"></script>
  <script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>  
<% end %>


<div class="grid-row">
	<div class="grid-cell">
	<%= simple_form_for @project do |f| %>
	  <%= f.input :name %>
	  <%= f.input :description %>
	  <%= f.association :status %>
	  <%= f.input(:typology_id, :collection => SubTypology.order(:name), :as => :grouped_select, :group_method => :typologies) %>
	  <div class="grid-row">
	  	<div class="grid-cell">
	  		<%= f.input :latitude, inline_label: 'Lat' %>
	  	</div>
	  	<div class="grid-cell">
	  		<%= f.input :longitude, inline_label: 'Lon' %>
	  	</div>
	  </div>
	  <%= f.button :submit %>
	<% end %>
	</div>
	<div class="grid-cell">

		<!-- <div class="map" id='map-one'></div> -->

		<input id="pac-input" class="gmcontrols" type="text" placeholder="Saisir une adresse et déplacer le point">
<!-- 		<div id="type-selector" class="gmcontrols">
			<input type="radio" name="type" id="changetype-all" checked="checked">
			<label for="changetype-all">Tout</label>

			<input type="radio" name="type" id="changetype-establishment">
			<label for="changetype-establishment">Lieux</label>

			<input type="radio" name="type" id="changetype-geocode">
			<label for="changetype-geocode">Adresses</label>
		</div> -->
		<div id="map-canvas" style='width: auto; height: 475px;'></div>

	</div>
</div>



<!-- SELECT 2 - ARRAY -->
<script>
var data = [{
    text     : "Header One",
    children : [{
        id   : 0,
        text : "Item One"
    }, { 
        id   : 1,
        text : "Item Two"
    }]
}];
  $(document).ready(function() { 
    $("#project_status_id").select2({
      allowClear: true,
      width: '75%',
      placeholder: "Sélectionner une valeur"
    });
    $("#project_typology_id").select2({
      allowClear: true,
      width: '75%',
      placeholder: "Sélectionner une valeur"
    })
  });
</script>


<!-- GOOGLE PLACES AUTOCOMPLETE -->
<script>
  function initialize() {
    <% if @project.latitude? %>
      var myLatlng = new google.maps.LatLng(<%= @project.latitude %>, <%= @project.longitude %>);
    <% else %>
      var myLatlng = new google.maps.LatLng(48.856638, 2.352241);
    <% end %>
    var mapOptions = {
      center: myLatlng,
      zoom: 15
    };
    var map = new google.maps.Map(document.getElementById('map-canvas'),
      mapOptions);

    var input = /** @type {HTMLInputElement} */(
        document.getElementById('pac-input'));

    var types = document.getElementById('type-selector');
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

    var autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.bindTo('bounds', map);

    var infowindow = new google.maps.InfoWindow();

    <% if @project.latitude? %>
    var project = new google.maps.Marker({
      position: myLatlng,
      map: map,
      draggable: true,
      name: 'Cliquer pour zoomer sur <%= @project.name %>'
    });
    <% else  %>
      var project = new google.maps.Marker({
      map: map,
      anchorPoint: new google.maps.Point(0, -29),
      draggable: true
    });
    <% end %>



    google.maps.event.addListener(autocomplete, 'place_changed', function() {
      infowindow.close();
      project.setVisible(false);
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        return;
      }
      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);  // Why 17? Because it looks good.
      }
      project.setIcon(/** @type {google.maps.Icon} */({
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(35, 35)
      }));
      project.setPosition(place.geometry.location);
      project.setVisible(true);

      var address = '';
      if (place.address_components) {
        address = [
          (place.address_components[0] && place.address_components[0].short_name || ''),
          (place.address_components[1] && place.address_components[1].short_name || ''),
          (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');
        var lat=document.getElementById("project_latitude").value=place.geometry.location.lat();    
        var lng=document.getElementById("project_longitude").value=place.geometry.location.lng();

        var project_location=document.getElementById("project_location").value=place.formatted_address;

      }

      infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
      infowindow.open(map, project);
    });

    //Sets a listener on marker drag to update lat/long fields based on new location

    google.maps.event.addListener(project,'drag',function(event) {
      document.getElementById('project_latitude').value = event.latLng.lat();
      document.getElementById('project_longitude').value = event.latLng.lng();
    });

    google.maps.event.addListener(project, 'click', function() {
      map.setZoom(18);
      map.setCenter(project.getPosition());
    });




    // Sets a listener on a radio button to change the filter type on Places
    // Autocomplete.
    function setupClickListener(id, types) {
      var radioButton = document.getElementById(id);
      google.maps.event.addDomListener(radioButton, 'click', function() {
        autocomplete.setTypes(types);
      });
    }

    setupClickListener('changetype-all', []);
    setupClickListener('changetype-establishment', ['establishment']);
    setupClickListener('changetype-geocode', ['geocode']);
  }

  

  google.maps.event.addDomListener(window, 'load', initialize);

</script>